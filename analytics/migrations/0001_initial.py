# Generated by Django 5.2.5 on 2025-08-31 20:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blog', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GoogleAnalyticsIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_id', models.CharField(help_text='GA tracking ID (G-XXXXXXXXXX)', max_length=50)),
                ('property_id', models.CharField(blank=True, help_text='GA4 Property ID', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('service_account_key', models.TextField(blank=True, help_text='JSON service account key')),
                ('view_id', models.CharField(blank=True, help_text='GA View ID for reporting', max_length=50)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(blank=True, max_length=100)),
                ('cached_metrics', models.JSONField(default=dict, help_text='Cached GA metrics')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Google Analytics Integration',
                'verbose_name_plural': 'Google Analytics Integrations',
            },
        ),
        migrations.CreateModel(
            name='NewsletterStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('subscription', 'New Subscription'), ('unsubscription', 'Unsubscription'), ('email_sent', 'Email Sent'), ('email_opened', 'Email Opened'), ('link_clicked', 'Link Clicked')], max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('campaign_name', models.CharField(blank=True, max_length=100)),
                ('email_subject', models.CharField(blank=True, max_length=200)),
                ('link_url', models.URLField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Newsletter Stats',
                'verbose_name_plural': 'Newsletter Statistics',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report')], max_length=20)),
                ('report_date', models.DateField()),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('unique_visitors', models.PositiveIntegerField(default=0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('avg_session_duration', models.PositiveIntegerField(default=0)),
                ('most_popular_posts', models.JSONField(default=list)),
                ('top_search_queries', models.JSONField(default=list)),
                ('top_referrers', models.JSONField(default=list)),
                ('total_comments', models.PositiveIntegerField(default=0)),
                ('total_ratings', models.PositiveIntegerField(default=0)),
                ('total_shares', models.PositiveIntegerField(default=0)),
                ('total_downloads', models.PositiveIntegerField(default=0)),
                ('top_countries', models.JSONField(default=list)),
                ('top_cities', models.JSONField(default=list)),
                ('top_browsers', models.JSONField(default=list)),
                ('top_devices', models.JSONField(default=list)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Analytics Report',
                'verbose_name_plural': 'Analytics Reports',
                'ordering': ['-report_date'],
                'unique_together': {('report_type', 'report_date')},
            },
        ),
        migrations.CreateModel(
            name='DownloadEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(default=0, help_text='File size in bytes')),
                ('download_type', models.CharField(choices=[('blog_resource', 'Blog Resource'), ('pdf', 'PDF Document'), ('image', 'Image'), ('other', 'Other File')], default='other', max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('blog_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='download_events', to='blog.blogpost')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='downloads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Download Event',
                'verbose_name_plural': 'Download Events',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200)),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('searched_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='search_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search Query',
                'verbose_name_plural': 'Search Queries',
                'ordering': ['-searched_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter/X'), ('linkedin', 'LinkedIn'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('email', 'Email'), ('copy_link', 'Copy Link'), ('other', 'Other')], max_length=20)),
                ('shared_url', models.URLField()),
                ('content_title', models.CharField(blank=True, max_length=200)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('blog_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_shares', to='blog.blogpost')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_shares', to='core.page')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Social Share',
                'verbose_name_plural': 'Social Shares',
                'ordering': ['-shared_at'],
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(choices=[('home', 'Homepage'), ('blog_list', 'Blog List'), ('blog_post', 'Blog Post'), ('category', 'Category Page'), ('tag', 'Tag Page'), ('page', 'Static Page'), ('other', 'Other')], default='other', max_length=20)),
                ('page_title', models.CharField(blank=True, max_length=200)),
                ('url', models.URLField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('country_name', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('time_on_page', models.PositiveIntegerField(default=0, help_text='Time spent on page in seconds')),
                ('scroll_depth', models.PositiveSmallIntegerField(default=0, help_text='Max scroll depth percentage')),
                ('bounced', models.BooleanField(default=True, help_text='Single page session')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('blog_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_views', to='blog.blogpost')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_views', to='core.page')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='page_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Page View',
                'verbose_name_plural': 'Page Views',
                'ordering': ['-viewed_at'],
                'indexes': [models.Index(fields=['viewed_at'], name='analytics_p_viewed__6302cc_idx'), models.Index(fields=['page_type', 'viewed_at'], name='analytics_p_page_ty_1abf78_idx'), models.Index(fields=['ip_address'], name='analytics_p_ip_addr_3b1d53_idx'), models.Index(fields=['session_key'], name='analytics_p_session_1f2553_idx')],
            },
        ),
    ]
