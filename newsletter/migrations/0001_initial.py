# Generated by Django 5.2.5 on 2025-08-31 21:03

import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('newsletter', 'Newsletter'), ('welcome', 'Welcome Email'), ('blog_notification', 'New Blog Post'), ('digest', 'Blog Digest'), ('announcement', 'Announcement'), ('custom', 'Custom Template')], default='custom', max_length=30)),
                ('description', models.TextField(blank=True)),
                ('subject_template', models.CharField(help_text='Use {{variable}} for dynamic content', max_length=200)),
                ('html_content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('plain_text_content', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False, help_text='Default template for this type')),
                ('times_used', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('form_type', models.CharField(choices=[('popup', 'Popup Modal'), ('inline', 'Inline Form'), ('sidebar', 'Sidebar Widget'), ('footer', 'Footer Form'), ('page', 'Dedicated Page')], default='inline', max_length=20)),
                ('headline', models.CharField(default='Subscribe to Our Newsletter', max_length=200)),
                ('description', models.TextField(default='Get the latest blog posts and updates delivered to your inbox.', max_length=500)),
                ('button_text', models.CharField(default='Subscribe', max_length=50)),
                ('success_message', models.CharField(default='Thank you for subscribing! Please check your email to confirm.', max_length=200)),
                ('show_name_fields', models.BooleanField(default=False)),
                ('show_interests', models.BooleanField(default=False)),
                ('require_double_opt_in', models.BooleanField(default=True, help_text='Send verification email before activation')),
                ('background_color', models.CharField(default='#ffffff', help_text='Hex color', max_length=7)),
                ('text_color', models.CharField(default='#333333', help_text='Hex color', max_length=7)),
                ('button_color', models.CharField(default='#007cba', help_text='Hex color', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('total_submissions', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Form',
                'verbose_name_plural': 'Subscription Forms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AutomatedEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('trigger_type', models.CharField(choices=[('subscription', 'New Subscription'), ('blog_post', 'New Blog Post'), ('category_post', 'New Post in Category'), ('schedule', 'Scheduled Send')], max_length=20)),
                ('delay_hours', models.PositiveIntegerField(default=0, help_text='Hours to wait before sending (0 for immediate)')),
                ('is_active', models.BooleanField(default=True)),
                ('max_sends_per_subscriber', models.PositiveIntegerField(default=1, help_text='Maximum times to send this email to one subscriber')),
                ('total_triggered', models.PositiveIntegerField(default=0)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trigger_category', models.ForeignKey(blank=True, help_text='For category-specific triggers', null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.category')),
                ('email_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automated_emails', to='newsletter.emailtemplate')),
            ],
            options={
                'verbose_name': 'Automated Email',
                'verbose_name_plural': 'Automated Emails',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('unsubscribed', 'Unsubscribed'), ('bounced', 'Bounced'), ('spam_complaint', 'Spam Complaint')], default='active', max_length=20)),
                ('subscription_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('frequency_preference', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('immediately', 'Immediate (New Posts)')], default='weekly', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer_url', models.URLField(blank=True, help_text='Where they subscribed from')),
                ('country', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('total_emails_sent', models.PositiveIntegerField(default=0)),
                ('total_emails_opened', models.PositiveIntegerField(default=0)),
                ('total_links_clicked', models.PositiveIntegerField(default=0)),
                ('last_engagement', models.DateTimeField(blank=True, null=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('subscription_interests', models.ManyToManyField(blank=True, help_text="Categories they're interested in", to='blog.category')),
            ],
            options={
                'verbose_name': 'Newsletter Subscriber',
                'verbose_name_plural': 'Newsletter Subscribers',
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Internal campaign name', max_length=200)),
                ('campaign_type', models.CharField(choices=[('newsletter', 'Newsletter'), ('announcement', 'Announcement'), ('blog_digest', 'Blog Digest'), ('welcome', 'Welcome Email'), ('promotional', 'Promotional')], default='newsletter', max_length=20)),
                ('subject', models.CharField(help_text='Email subject line', max_length=200)),
                ('preheader', models.CharField(blank=True, help_text='Preview text', max_length=150)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(help_text='Email content')),
                ('plain_text_content', models.TextField(blank=True, help_text='Plain text version')),
                ('from_name', models.CharField(default="Habiba's Blog", max_length=100)),
                ('from_email', models.EmailField(max_length=254)),
                ('reply_to_email', models.EmailField(blank=True, max_length=254)),
                ('send_to_all', models.BooleanField(default=True, help_text='Send to all active subscribers')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('total_delivered', models.PositiveIntegerField(default=0)),
                ('total_bounced', models.PositiveIntegerField(default=0)),
                ('total_opened', models.PositiveIntegerField(default=0)),
                ('total_clicked', models.PositiveIntegerField(default=0)),
                ('total_unsubscribed', models.PositiveIntegerField(default=0)),
                ('total_spam_complaints', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('featured_posts', models.ManyToManyField(blank=True, help_text='Blog posts to feature in this campaign', to='blog.blogpost')),
                ('target_categories', models.ManyToManyField(blank=True, help_text='Send only to subscribers interested in these categories', to='blog.category')),
                ('target_subscribers', models.ManyToManyField(blank=True, help_text='Specific subscribers to target', to='newsletter.newslettersubscriber')),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('subscription', 'New Subscription'), ('unsubscription', 'Unsubscription'), ('email_sent', 'Email Sent'), ('email_opened', 'Email Opened'), ('link_clicked', 'Link Clicked'), ('bounce', 'Email Bounced'), ('spam_complaint', 'Spam Complaint'), ('verification_sent', 'Verification Email Sent'), ('email_verified', 'Email Verified')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('email_subject', models.CharField(blank=True, max_length=200)),
                ('clicked_url', models.URLField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='newsletter.emailcampaign')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='newsletter.newslettersubscriber')),
            ],
            options={
                'verbose_name': 'Newsletter Activity',
                'verbose_name_plural': 'Newsletter Activities',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['activity_type', 'created_at'], name='newsletter__activit_910437_idx'), models.Index(fields=['subscriber', 'created_at'], name='newsletter__subscri_adedae_idx')],
            },
        ),
    ]
