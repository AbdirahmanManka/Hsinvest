# Generated by Django 5.2.5 on 2025-08-31 20:10

import ckeditor.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_replied', models.BooleanField(default=False)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', ckeditor.fields.RichTextField()),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers first)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'question'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('page_type', models.CharField(choices=[('about', 'About'), ('services', 'Services'), ('privacy', 'Privacy Policy'), ('terms', 'Terms of Service'), ('contact', 'Contact'), ('custom', 'Custom Page')], default='custom', max_length=20)),
                ('content', ckeditor.fields.RichTextField()),
                ('meta_title', models.CharField(blank=True, help_text='SEO title (60 chars)', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='SEO description (160 chars)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords, comma separated', max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('show_in_menu', models.BooleanField(default=False, help_text='Show in main navigation')),
                ('menu_order', models.PositiveIntegerField(default=0, help_text='Order in menu (lower numbers first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['menu_order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(help_text='Short description', max_length=300)),
                ('content', ckeditor.fields.RichTextField(help_text='Detailed service description')),
                ('image', models.ImageField(blank=True, upload_to='services/')),
                ('icon', models.CharField(blank=True, help_text='CSS class for icon (e.g., fas fa-code)', max_length=50)),
                ('price_from', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_currency', models.CharField(default='USD', max_length=3)),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['-is_featured', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default="Habiba's Blog", max_length=100)),
                ('site_description', models.TextField(default='Welcome to my professional blog', max_length=200)),
                ('site_keywords', models.CharField(help_text='SEO keywords, comma separated', max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('meta_description', models.CharField(help_text='Meta description for SEO', max_length=160)),
                ('og_image', models.ImageField(blank=True, help_text='Open Graph image', upload_to='site/')),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('allow_comments', models.BooleanField(default=True)),
                ('allow_newsletter_signup', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, help_text='Job title or company', max_length=100)),
                ('content', models.TextField(max_length=500)),
                ('image', models.ImageField(blank=True, upload_to='testimonials/')),
                ('rating', models.PositiveSmallIntegerField(default=5, help_text='Rating out of 5')),
                ('website_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-is_featured', 'order', '-created_at'],
            },
        ),
    ]
